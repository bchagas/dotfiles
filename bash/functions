title() {
  echo -ne "\033]0;$@\007";
}

reload() {
  source ~/.bash_profile;
}

git_status(){
  if [[ "$1" != "" ]]; then
    local CURRENT_DIR=`pwd`
    cd $1
  fi

  local STATUS=`git status 2>/dev/null`
  local PROMPT_STATUS=""
  local STATE=""
  local NOTHING_TO_COMMIT="# Initial commit"
  local BEHIND="# Your branch is behind"
  local AHEAD="# Your branch is ahead"
  local UNTRACKED="# Untracked files"
  local DIVERGED="have diverged"
  local CHANGED="# Changed but not updated"
  local TO_BE_COMMITED="# Changes to be committed"
  local NOT_STAGED="# Changes not staged for commit"
  local LOG=`git log -1 2> /dev/null`

  if [ "$STATUS" != "" ]; then
    if [[ "$STATUS" =~ "$NOTHING_TO_COMMIT" ]]; then
      PROMPT_STATUS="!"
      STATE=""
    elif [[ "$STATUS" =~ "$DIVERGED" ]]; then
      PROMPT_STATUS="!"
      STATE="${STATE}↕"
    elif [[ "$STATUS" =~ "$BEHIND" ]]; then
      PROMPT_STATUS="!"
      STATE="${STATE}↓"
    elif [[ "$STATUS" =~ "$AHEAD" ]]; then
      PROMPT_STATUS="!"
      STATE="${STATE}↑"
    elif [[ "$STATUS" =~ "$CHANGED" ]]; then
      PROMPT_STATUS="!"
      STATE=""
    elif [[ "$STATUS" =~ "$TO_BE_COMMITED" ]]; then
      PROMPT_STATUS=""
      STATE=" *"
    elif [[ "$STATUS" =~ "$NOT_STAGED" ]]; then
      STATE=" !"
    else
      PROMPT_STATUS=""
      STATE=""
    fi

    if [[ "$STATUS" =~ "$UNTRACKED" ]]; then
      STATE="${STATE}*"
    fi
  fi

  if [[ "$1" != "" ]]; then
    cd $CURRENT_DIR
  fi

  echo "$STATE"
}

custom_term () {
  local BRANCH=`git branch 2> /dev/null | grep \* | sed 's/* //'`
  local STATE=`git_status`
  local DIR=$(basename `pwd`)
  local DIR_NAME=`ruby -e "puts '${DIR}'.capitalize"`

  if [[ "$GEMSET_NAME" != "" ]]; then
    if [ "$GEMSET_NAME" != "$HOME/.rvm/gems/ree-1.8.7-2011.03" ]; then
      RUBY_PROMPT="(${GEMSET_NAME}) "
    fi
  else
    RUBY_PROMPT="" # "${RUBY_VERSION}"
  fi

  PS1="${LIGHT_RED}\W${RUBY_PROMPT}${LIGHT_RED} ⊗ ${NO_COLOR}"
  title "${DIR_NAME} ${BRANCH} ${STATE}"
}


PROMPT_COMMAND=custom_term

cd() {
  builtin cd "${@:-$HOME}";
  if [ -f .rvmrc ]; then
    __rvm_project_rvmrc
  fi
}

pid(){
  ps auwx | perl -anE '$,="\t"; say @F[1,10]' | grep $1
}

show_projects(){
  ls -l1 $HOME/code | egrep --color=never [a-z0-9]
}

[[ -s $HOME/.rvm/scripts/rvm ]] && source $HOME/.rvm/scripts/rvm
